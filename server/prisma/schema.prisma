generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRES_DATABASE_URL")
}

model contributions {
  contri_id   Int        @id @default(autoincrement())
  spending_id Int?
  user_id     Int?
  amount      Decimal?   @db.Decimal(10, 2)
  spendings   spendings? @relation(fields: [spending_id], references: [spending_id], onDelete: NoAction, onUpdate: NoAction)
  users       users?     @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([spending_id], map: "idx_contributions_spending_id")
  @@index([user_id], map: "idx_contributions_user_id")
}

model friends {
  user_id                        Int
  friend_id                      Int
  created_at                     DateTime? @default(now()) @db.Timestamp(6)
  balance                        Decimal?  @default(0) @db.Decimal(10, 2)
  users_friends_friend_idTousers users     @relation("friends_friend_idTousers", fields: [friend_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  users_friends_user_idTousers   users     @relation("friends_user_idTousers", fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([user_id, friend_id])
}

model personal_expenses {
  expense_id  Int       @id @default(autoincrement())
  user_id     Int?
  amount      Decimal?  @db.Decimal(10, 2)
  description String?
  date        DateTime? @default(now()) @db.Timestamp(6)
  users       users?    @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)

  @@index([description], map: "idx_expense_description")
  @@index([user_id], map: "idx_personal_expenses_user_id")
}

model spendings {
  spending_id                Int                          @id @default(autoincrement())
  user_id                    Int?
  amount                     Decimal?                     @db.Decimal(10, 2)
  description                String?
  date                       DateTime?                    @default(now()) @db.Timestamp(6)
  contributions              contributions[]
  users                      users?                       @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  unregistered_contributions unregistered_contributions[]

  @@index([description], map: "idx_spending_description")
  @@index([user_id], map: "idx_spendings_user_id")
}

model unregistered_contributions {
  contri_id          Int                 @id @default(autoincrement())
  spending_id        Int?
  user_id            Int?
  amount             Decimal?            @db.Decimal(10, 2)
  spendings          spendings?          @relation(fields: [spending_id], references: [spending_id], onDelete: NoAction, onUpdate: NoAction)
  unregistered_users unregistered_users? @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
}

model unregistered_friends {
  user_id            Int
  friend_id          Int
  created_at         DateTime?          @default(now()) @db.Timestamp(6)
  balance            Decimal?           @db.Decimal(10, 2)
  unregistered_users unregistered_users @relation(fields: [friend_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)
  users              users              @relation(fields: [user_id], references: [user_id], onDelete: NoAction, onUpdate: NoAction)

  @@id([user_id, friend_id])
}

model unregistered_users {
  user_id                    Int                          @id @default(autoincrement())
  username                   String                       @db.VarChar(255)
  unregistered_contributions unregistered_contributions[]
  unregistered_friends       unregistered_friends[]
}

model users {
  user_id                          Int                    @id @default(autoincrement())
  username                         String                 @db.VarChar(255)
  phone                            String                 @unique @db.VarChar(10)
  password                         String                 @db.VarChar(255)
  contributions                    contributions[]
  friends_friends_friend_idTousers friends[]              @relation("friends_friend_idTousers")
  friends_friends_user_idTousers   friends[]              @relation("friends_user_idTousers")
  personal_expenses                personal_expenses[]
  spendings                        spendings[]
  unregistered_friends             unregistered_friends[]
}
